package com.example.task_management_api;


import com.example.task_management_api.dto.RegistrationRequest;
import com.example.task_management_api.model.User;
import com.example.task_management_api.repository.UserRepository;
import com.example.task_management_api.service.auth.AuthServiceImpl;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.security.crypto.password.PasswordEncoder;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class AuthServiceTest {

    @InjectMocks
    private AuthServiceImpl authService;

    @Mock
    private UserRepository userRepository;

    @Mock
    private PasswordEncoder passwordEncoder;

    @Test
    void registerUser_ShouldSaveNewUser() {
        RegistrationRequest req = new RegistrationRequest("test", "test@test.com", "1234");

        when(userRepository.existsByEmailIgnoreCase("test@test.com")).thenReturn(false);
        when(passwordEncoder.encode("1234")).thenReturn("encoded");

        authService.registerUser(req);

        verify(userRepository).save(any(User.class));
    }
}